licenses(["notice"])  # Apache License 2.0

load("//tools/base/bazel:coverage.bzl", "coverage_java_test")
load("//tools/base/bazel:maven.bzl", "maven_library")
load("//tools/base/common:version.bzl", "BUILD_VERSION")

maven_library(
    name = "apkzlib",
    srcs = glob([
        "src/main/java/**/*.java",
    ]),
    bundled_deps = [
        ":com.google.auto.value_auto-value_neverlink",
    ],
    coordinates = "com.android.tools.build:apkzlib:" + BUILD_VERSION,
    description = "Library used to incrementally build and sign APKs",
    notice = "NOTICE",
    plugins = [
        ":auto-value-plugin",
    ],
    resource_strip_prefix = "tools/apkzlib",
    visibility = [
        "//tools/base:__pkg__",
        "//tools/base/build-system:__subpackages__",
        "//tools/base/gmaven:__pkg__",
        "//tools/base/signflinger:__subpackages__",
        "//tools/base/zipflinger:__subpackages__",
    ],
    deps = [
        "//tools/base/build-system:tools.apksig",
        "@maven//:com.google.code.findbugs.jsr305",
        "@maven//:com.google.guava.guava",
        "@maven//:org.bouncycastle.bcpkix-jdk15on",
        "@maven//:org.bouncycastle.bcprov-jdk15on",
    ],
)

java_library(
    name = "apkzlib_tests_lib",
    srcs = glob(["src/test/java/**/*.java"]),
    resources = glob(["src/test/resources/**"]),
    deps = [
        ":apkzlib",
        "//tools/base/build-system:tools.apksig",
        "//tools/base/testutils:tools.testutils",
        "@maven//:com.google.guava.guava",
        "@maven//:com.google.truth.truth",
        "@maven//:junit.junit",
        "@maven//:org.bouncycastle.bcpkix-jdk15on",
        "@maven//:org.bouncycastle.bcprov-jdk15on",
        "@maven//:org.mockito.mockito-core",
    ],
)

coverage_java_test(
    name = "apkzlib_tests",
    size = "large",
    jvm_flags = ["-Dtest.suite.jar=apkzlib_tests_lib.jar"],
    tags = ["no_test_windows"],  # Tests are currently failing on windows
    test_class = "com.android.testutils.JarTestSuite",
    runtime_deps = [
        ":apkzlib_tests_lib",
        "//tools/base/testutils:tools.testutils",
        "@maven//:junit.junit",
    ],
)

java_plugin(
    name = "auto-value-plugin",
    processor_class = "com.google.auto.value.processor.AutoValueProcessor",
    deps = [
        "@maven//:com.google.auto.value.auto-value",
        "@maven//:com.google.auto.value.auto-value-annotations",
    ],
)

# Compile-time only dependency on the auto-value.
java_library(
    name = "com.google.auto.value_auto-value_neverlink",
    neverlink = 1,
    exports = [
        "@maven//:com.google.auto.value.auto-value",
        "@maven//:com.google.auto.value.auto-value-annotations",
    ],
)
